#!/usr/bin/env zsh
# Installs all my dotfiles for this operating system.

set -e

# Make sure we're relative to the install script
cd "$(dirname "$0")"

# Make sure the helper functions are loaded. Although
# these are loaded in the .zshrc we still need to make
# them available in case this is the first run and
# system is really not setup yet.
source "./zsh/functions/is_os"

# Setup some colors
ERROR='\033[0;31m'
OK='\033[0;32m'
NC='\033[0m' # No Color

# Wrap ln -sfn with print so I can verify stuff goes
# where it probably should go.
symlink() {
  echo "  ${OK}Linking $1 -> $2$NC"
  ln -sfn $1 $2
}

mkdirp() {
  echo "  ${OK}Creating directories $1$NC"
  mkdir -p $1
}

if ! if_osx && ! if_linux ; then
  >&2 echo "${ERROR}Exiting due to unknown OS $OSTYPE"
  >&2 echo "OSTYPE should be one of *darwin* or *linux*$NC"
  echo "No dotfiles have been changed!"
  exit 1
fi

# Install vundle for vim
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

echo "Running dotfiles from $(pwd)\n"

# Common configuration for all operating systems
echo "Setting up common configuration"
mkdirp $HOME/development
mkdirp $HOME/development/personal
mkdirp $HOME/development/work
mkdirp $HOME/development/work/clients
mkdirp $HOME/development/work/internal

mkdirp $HOME/.config

symlink "$(pwd)/aliases"              $HOME/.aliases

symlink "$(pwd)/bin"                  $HOME/bin

symlink "$(pwd)/git_template"         $HOME/.git_template

symlink "$(pwd)/gemrc"                $HOME/.gemrc

symlink "$(pwd)/gitconfig"            $HOME/.gitconfig
symlink "$(pwd)/gitignore"            $HOME/.gitignore
symlink "$(pwd)/gitmessage"           $HOME/.gitmessage

symlink "$(pwd)/psqlrc"               $HOME/.psqlrc
symlink "$(pwd)/rspec"                $HOME/.rspec

symlink "$(pwd)/tmux"                 $HOME/.config/tmux
symlink "$(pwd)/tmux.conf"            $HOME/.tmux.conf

# Vim configuration
symlink "$(pwd)/vimrc"                $HOME/.vimrc
symlink "$(pwd)/vimrc.bundles"        $HOME/.vimrc.bundles

# NeoVim configuration
mkdirp  "$HOME/.config/nvim"
symlink "$(pwd)/nvim/init.lua"        "$HOME/.config/nvim/init.lua"
symlink "$(pwd)/nvim/lua"             "$HOME/.config/nvim/lua"

mkdirp  "$HOME/.zsh/functions"
symlink "$(pwd)/zsh/functions/is_os"  $HOME/.zsh/functions/is_os
symlink "$(pwd)/zshenv"               $HOME/.zshenv
symlink "$(pwd)/zshrc"                $HOME/.zshrc
echo "Setup done for common configuration\n"

# Linux specific setup, only tested on Arch linux
if if_linux ; then
  echo "Setting up Linux"

  symlink "$(pwd)/xinitrc"                  $HOME/.xinitrc

  mkdirp $HOME/.config/i3
  symlink "$(pwd)/i3/config"                $HOME/.config/i3/config

  mkdirp $HOME/.config/dunst
  symlink "$(pwd)/dunst/dunstrc"            $HOME/.config/dunst/dunstrc

  mkdirp $HOME/.config/polybar
  symlink "$(pwd)/polybar/config"           $HOME/.config/polybar/config
  symlink "$(pwd)/polybar/launch.sh"        $HOME/.config/polybar/launch.sh

  mkdirp $HOME/.config/rofi
  symlink "$(pwd)/rofi/config.rasi"         $HOME/.config/rofi/config.rasi

  mkdirp $HOME/.config/alacritty
  symlink "$(pwd)/alacritty/alacritty.yml"  $HOME/.config/alacritty/alacritty.yml

  echo "Setup done for Linux\n"
fi

# TODO: This should install these packages I need as well:
#         pyright
#         terraformls
#         neovim
#         tfenv
#         pyenv
#         jenv
#         nodenv
#         node MAKE sure to update init.lua if you change this!

# macOS specific setup. Only tested on Catalina
if if_osx; then
  echo "Setting up macOS"

  # TODO install these
  # brew install hashicorp/tap/terraform-ls

  # TODO install default packages for node js
  #      many of the tools I use need some packages
  echo "Setup done for macOS\n"
fi

echo "${OK}All done!$NC"
