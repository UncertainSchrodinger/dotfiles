# Warning: This config does not include keys that have an unset value

"$schema" = "https://starship.rs/config-schema.json"

# Kinda hard for the eyes :D
format = """
[‚ï≠‚îÄ](white)$username$hostname in $localip$kubernetes$directory$git_branch$git_commit$git_state$git_status$package$golang$helm$nodejs$python$rust$terraform$nix_shell$aws$azure$sudo$cmd_duration$jobs$battery$time
[‚ï∞‚îÄ](white)$character """

right_format = ""
continuation_prompt = "[‚àô](bright-black) "
scan_timeout = 30
command_timeout = 500
add_newline = true
follow_symlinks = true

[aws]
format = 'on [$symbol($profile )(\($region\) )(\[$duration\] )]($style)'
symbol = "‚òÅÔ∏è  "
style = "bold yellow"
disabled = false
expiration_symbol = "X"
force_display = false

[aws.region_aliases]

[aws.profile_aliases]

[azure]
format = "on [$symbol($subscription)]($style) "
symbol = "Û∞†Ö "
style = "blue bold"
disabled = true

[azure.subscription_aliases]

[character]
format = "$symbol "
success_symbol = "[‚ùØ](bold green)"
error_symbol = "[‚ùØ](bold red)"
vimcmd_symbol = "[‚ùÆ](bold green)"
vimcmd_visual_symbol = "[‚ùÆ](bold yellow)"
vimcmd_replace_symbol = "[‚ùÆ](bold purple)"
vimcmd_replace_one_symbol = "[‚ùÆ](bold purple)"
disabled = false

[cmd_duration]
min_time = 2000
format = "took [$duration]($style) "
style = "yellow bold"
show_milliseconds = false
disabled = false
show_notifications = false
min_time_to_notify = 45000

[container]
format = '[$symbol \[$name\]]($style) '
symbol = "‚¨¢"
style = "red bold dimmed"
disabled = false

[directory]
truncation_length = 3
truncate_to_repo = true
fish_style_pwd_dir_length = 0
use_logical_path = true
format = "[$path]($style)[$read_only]($read_only_style) "
repo_root_format = "[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) "
style = "cyan bold"
disabled = false
read_only = "üîí"
read_only_style = "red"
truncation_symbol = ""
home_symbol = "~"
use_os_path_sep = true

[fill]
style = "bold black"
symbol = "."
disabled = false

[git_branch]
format = "on [$symbol$branch(:$remote_branch)]($style) "
symbol = "ÓÇ† "
style = "bold purple"
truncation_length = 9223372036854775807
truncation_symbol = "‚Ä¶"
only_attached = false
always_show_remote = false
ignore_branches = []
disabled = false

[git_commit]
commit_hash_length = 7
format = '[\($hash$tag\)]($style) '
style = "green bold"
only_detached = true
disabled = false
tag_symbol = " üè∑  "
tag_disabled = true
tag_max_candidates = 0

[git_state]
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
style = "bold yellow"
format = '\([$state( $progress_current/$progress_total)]($style)\) '
disabled = false

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
style = "red bold"
stashed = '\$'
ahead = "‚á°"
behind = "‚á£"
up_to_date = ""
diverged = "‚áï"
conflicted = "="
deleted = "‚úò"
renamed = "¬ª"
modified = "!"
staged = "+"
untracked = "?"
typechanged = ""
ignore_submodules = false
disabled = true

[golang]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "üêπ "
style = "bold cyan"
disabled = false
not_capable_style = "bold red"
detect_extensions = ["go"]
detect_files = [
    "go.mod",
    "go.sum",
    "go.work",
    "glide.yaml",
    "Gopkg.yml",
    "Gopkg.lock",
    ".go-version",
]
detect_folders = ["Godeps"]

[helm]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "‚éà "
style = "bold white"
disabled = false
detect_extensions = []
detect_files = [
    "helmfile.yaml",
    "Chart.yaml",
]
detect_folders = []

[hostname]
ssh_only = true
ssh_symbol = "üåê "
trim_at = "."
detect_env_vars = []
format = "[$ssh_symbol$hostname]($style) in "
style = "green dimmed bold"
disabled = false

[jobs]
threshold = 1
symbol_threshold = 1
number_threshold = 2
format = "[$symbol$number]($style) "
symbol = "‚ú¶"
style = "bold blue"
disabled = false

[kubernetes]
symbol = "‚ò∏ "
format = '[$symbol$context( \($namespace\))]($style) in '
style = "cyan bold"
disabled = true
detect_extensions = []
detect_files = []
detect_folders = []
detect_env_vars = []
contexts = []

[kubernetes.context_aliases]

[kubernetes.user_aliases]

[line_break]
disabled = false

[localip]
ssh_only = true
format = "[$localipv4]($style) "
style = "yellow bold"
disabled = true

[nix_shell]
format = 'via [$symbol$state( \($name\))]($style) '
symbol = "‚ùÑÔ∏è  "
style = "bold blue"
impure_msg = "impure"
pure_msg = "pure"
unknown_msg = ""
disabled = false
heuristic = false

[nodejs]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "Óúò "
style = "bold green"
disabled = false
not_capable_style = "bold red"
detect_extensions = [
    "js",
    "mjs",
    "cjs",
    "ts",
    "mts",
    "cts",
]
detect_files = [
    "package.json",
    ".node-version",
    ".nvmrc",
]
detect_folders = ["node_modules"]

[package]
format = "is [$symbol$version]($style) "
symbol = "üì¶ "
style = "208 bold"
display_private = false
disabled = false
version_format = "v${raw}"

[python]
pyenv_version_name = false
pyenv_prefix = "pyenv "
python_binary = [
    "python",
    "python3",
    "python2",
]
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
version_format = "v${raw}"
style = "yellow bold"
symbol = "üêç "
disabled = false
detect_extensions = ["py"]
detect_files = [
    "requirements.txt",
    ".python-version",
    "pyproject.toml",
    "Pipfile",
    "tox.ini",
    "setup.py",
    "__init__.py",
]
detect_folders = []

[rust]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "ü¶Ä "
style = "bold red"
disabled = false
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]
detect_folders = []

[sudo]
format = "[as $symbol]($style)"
symbol = "üßô "
style = "bold blue"
allow_windows = false
disabled = false

[terraform]
format = "via [$symbol$workspace]($style) "
version_format = "v${raw}"
symbol = "üí† "
style = "bold 105"
disabled = false
detect_extensions = [
    "tf",
    "tfplan",
    "tfstate",
]
detect_files = []
detect_folders = [".terraform"]

[time]
format = "at [$time]($style) "
style = "bold yellow"
use_12hr = false
disabled = true
utc_time_offset = "local"
time_range = "-"

[username]
detect_env_vars = []
format = "[$user]($style) in "
style_root = "red bold"
style_user = "yellow bold"
show_always = false
disabled = false

[username.aliases]
